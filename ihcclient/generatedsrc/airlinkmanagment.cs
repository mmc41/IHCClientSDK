//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Ihc.Soap.AirlinkManagement
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="utcs", ConfigurationName="Ihc.Soap.AirlinkManagement.AirlinkManagementService")]
    public interface AirlinkManagementService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="enterRFConfiguration", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<Ihc.Soap.AirlinkManagement.outputMessageName1> enterRFConfigurationAsync(Ihc.Soap.AirlinkManagement.inputMessageName1 request);
        
        [System.ServiceModel.OperationContractAttribute(Action="exitRFConfiguration", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<Ihc.Soap.AirlinkManagement.outputMessageName2> exitRFConfigurationAsync(Ihc.Soap.AirlinkManagement.inputMessageName2 request);
        
        [System.ServiceModel.OperationContractAttribute(Action="testRFActuatorWithSerialNumber", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<Ihc.Soap.AirlinkManagement.outputMessageName3> testRFActuatorWithSerialNumberAsync(Ihc.Soap.AirlinkManagement.inputMessageName3 request);
        
        [System.ServiceModel.OperationContractAttribute(Action="getDevicesRunningOutOfBattery", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<Ihc.Soap.AirlinkManagement.outputMessageName4> getDevicesRunningOutOfBatteryAsync(Ihc.Soap.AirlinkManagement.inputMessageName4 request);
        
        [System.ServiceModel.OperationContractAttribute(Action="waitForDeviceDetected", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<Ihc.Soap.AirlinkManagement.outputMessageName5> waitForDeviceDetectedAsync(Ihc.Soap.AirlinkManagement.inputMessageName5 request);
        
        [System.ServiceModel.OperationContractAttribute(Action="waitForDeviceTestResult", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<Ihc.Soap.AirlinkManagement.outputMessageName6> waitForDeviceTestResultAsync(Ihc.Soap.AirlinkManagement.inputMessageName6 request);
        
        [System.ServiceModel.OperationContractAttribute(Action="getDetectedDeviceList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<Ihc.Soap.AirlinkManagement.outputMessageName7> getDetectedDeviceListAsync(Ihc.Soap.AirlinkManagement.inputMessageName7 request);
        
        [System.ServiceModel.OperationContractAttribute(Action="enterRFTest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<Ihc.Soap.AirlinkManagement.outputMessageName8> enterRFTestAsync(Ihc.Soap.AirlinkManagement.inputMessageName8 request);
        
        [System.ServiceModel.OperationContractAttribute(Action="exitRFTest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<Ihc.Soap.AirlinkManagement.outputMessageName9> exitRFTestAsync(Ihc.Soap.AirlinkManagement.inputMessageName9 request);
        
        [System.ServiceModel.OperationContractAttribute(Action="getBatteryLevel", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<Ihc.Soap.AirlinkManagement.outputMessageName10> getBatteryLevelAsync(Ihc.Soap.AirlinkManagement.inputMessageName10 request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class inputMessageName1
    {
        
        public inputMessageName1()
        {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class outputMessageName1
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="utcs", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> enterRFConfiguration1;
        
        public outputMessageName1()
        {
        }
        
        public outputMessageName1(System.Nullable<bool> enterRFConfiguration1)
        {
            this.enterRFConfiguration1 = enterRFConfiguration1;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class inputMessageName2
    {
        
        public inputMessageName2()
        {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class outputMessageName2
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="utcs", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> exitRFConfiguration1;
        
        public outputMessageName2()
        {
        }
        
        public outputMessageName2(System.Nullable<bool> exitRFConfiguration1)
        {
            this.exitRFConfiguration1 = exitRFConfiguration1;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class inputMessageName3
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="utcs", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> testRFActuatorWithSerialNumber1;
        
        public inputMessageName3()
        {
        }
        
        public inputMessageName3(System.Nullable<long> testRFActuatorWithSerialNumber1)
        {
            this.testRFActuatorWithSerialNumber1 = testRFActuatorWithSerialNumber1;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class outputMessageName3
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="utcs", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> testRFActuatorWithSerialNumber2;
        
        public outputMessageName3()
        {
        }
        
        public outputMessageName3(System.Nullable<bool> testRFActuatorWithSerialNumber2)
        {
            this.testRFActuatorWithSerialNumber2 = testRFActuatorWithSerialNumber2;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class inputMessageName4
    {
        
        public inputMessageName4()
        {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class outputMessageName4
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="utcs", Order=0)]
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("arrayItem", Namespace="http://java.lang", IsNullable=false)]
        public int[] getDevicesRunningOutOfBattery1;
        
        public outputMessageName4()
        {
        }
        
        public outputMessageName4(int[] getDevicesRunningOutOfBattery1)
        {
            this.getDevicesRunningOutOfBattery1 = getDevicesRunningOutOfBattery1;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="utcs")]
    public partial class WSRFDevice
    {
        
        private int batteryLevelField;
        
        private int signalStrengthField;
        
        private int deviceTypeField;
        
        private long serialNumberField;
        
        private int versionField;
        
        private bool detectedField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int batteryLevel
        {
            get
            {
                return this.batteryLevelField;
            }
            set
            {
                this.batteryLevelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int signalStrength
        {
            get
            {
                return this.signalStrengthField;
            }
            set
            {
                this.signalStrengthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public int deviceType
        {
            get
            {
                return this.deviceTypeField;
            }
            set
            {
                this.deviceTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public long serialNumber
        {
            get
            {
                return this.serialNumberField;
            }
            set
            {
                this.serialNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public int version
        {
            get
            {
                return this.versionField;
            }
            set
            {
                this.versionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public bool detected
        {
            get
            {
                return this.detectedField;
            }
            set
            {
                this.detectedField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class inputMessageName5
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="utcs", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> waitForDeviceDetected1;
        
        public inputMessageName5()
        {
        }
        
        public inputMessageName5(System.Nullable<int> waitForDeviceDetected1)
        {
            this.waitForDeviceDetected1 = waitForDeviceDetected1;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class outputMessageName5
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="utcs", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Ihc.Soap.AirlinkManagement.WSRFDevice waitForDeviceDetected2;
        
        public outputMessageName5()
        {
        }
        
        public outputMessageName5(Ihc.Soap.AirlinkManagement.WSRFDevice waitForDeviceDetected2)
        {
            this.waitForDeviceDetected2 = waitForDeviceDetected2;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class inputMessageName6
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="utcs", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> waitForDeviceTestResult1;
        
        public inputMessageName6()
        {
        }
        
        public inputMessageName6(System.Nullable<int> waitForDeviceTestResult1)
        {
            this.waitForDeviceTestResult1 = waitForDeviceTestResult1;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class outputMessageName6
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="utcs", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Ihc.Soap.AirlinkManagement.WSRFDevice waitForDeviceTestResult2;
        
        public outputMessageName6()
        {
        }
        
        public outputMessageName6(Ihc.Soap.AirlinkManagement.WSRFDevice waitForDeviceTestResult2)
        {
            this.waitForDeviceTestResult2 = waitForDeviceTestResult2;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class inputMessageName7
    {
        
        public inputMessageName7()
        {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class outputMessageName7
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="utcs", Order=0)]
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("arrayItem")]
        public Ihc.Soap.AirlinkManagement.WSRFDevice[] getDetectedDeviceList1;
        
        public outputMessageName7()
        {
        }
        
        public outputMessageName7(Ihc.Soap.AirlinkManagement.WSRFDevice[] getDetectedDeviceList1)
        {
            this.getDetectedDeviceList1 = getDetectedDeviceList1;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class inputMessageName8
    {
        
        public inputMessageName8()
        {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class outputMessageName8
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="utcs", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> enterRFTest1;
        
        public outputMessageName8()
        {
        }
        
        public outputMessageName8(System.Nullable<bool> enterRFTest1)
        {
            this.enterRFTest1 = enterRFTest1;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class inputMessageName9
    {
        
        public inputMessageName9()
        {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class outputMessageName9
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="utcs", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> exitRFTest1;
        
        public outputMessageName9()
        {
        }
        
        public outputMessageName9(System.Nullable<bool> exitRFTest1)
        {
            this.exitRFTest1 = exitRFTest1;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class inputMessageName10
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="utcs", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> getBatteryLevel1;
        
        public inputMessageName10()
        {
        }
        
        public inputMessageName10(System.Nullable<int> getBatteryLevel1)
        {
            this.getBatteryLevel1 = getBatteryLevel1;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class outputMessageName10
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="utcs", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> getBatteryLevel2;
        
        public outputMessageName10()
        {
        }
        
        public outputMessageName10(System.Nullable<int> getBatteryLevel2)
        {
            this.getBatteryLevel2 = getBatteryLevel2;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    public interface AirlinkManagementServiceChannel : Ihc.Soap.AirlinkManagement.AirlinkManagementService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    public partial class AirlinkManagementServiceClient : System.ServiceModel.ClientBase<Ihc.Soap.AirlinkManagement.AirlinkManagementService>, Ihc.Soap.AirlinkManagement.AirlinkManagementService
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public AirlinkManagementServiceClient() : 
                base(AirlinkManagementServiceClient.GetDefaultBinding(), AirlinkManagementServiceClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.AirlinkManagementServiceBindingPort.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public AirlinkManagementServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(AirlinkManagementServiceClient.GetBindingForEndpoint(endpointConfiguration), AirlinkManagementServiceClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public AirlinkManagementServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(AirlinkManagementServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public AirlinkManagementServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(AirlinkManagementServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public AirlinkManagementServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Ihc.Soap.AirlinkManagement.outputMessageName1> Ihc.Soap.AirlinkManagement.AirlinkManagementService.enterRFConfigurationAsync(Ihc.Soap.AirlinkManagement.inputMessageName1 request)
        {
            return base.Channel.enterRFConfigurationAsync(request);
        }
        
        public System.Threading.Tasks.Task<Ihc.Soap.AirlinkManagement.outputMessageName1> enterRFConfigurationAsync()
        {
            Ihc.Soap.AirlinkManagement.inputMessageName1 inValue = new Ihc.Soap.AirlinkManagement.inputMessageName1();
            return ((Ihc.Soap.AirlinkManagement.AirlinkManagementService)(this)).enterRFConfigurationAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Ihc.Soap.AirlinkManagement.outputMessageName2> Ihc.Soap.AirlinkManagement.AirlinkManagementService.exitRFConfigurationAsync(Ihc.Soap.AirlinkManagement.inputMessageName2 request)
        {
            return base.Channel.exitRFConfigurationAsync(request);
        }
        
        public System.Threading.Tasks.Task<Ihc.Soap.AirlinkManagement.outputMessageName2> exitRFConfigurationAsync()
        {
            Ihc.Soap.AirlinkManagement.inputMessageName2 inValue = new Ihc.Soap.AirlinkManagement.inputMessageName2();
            return ((Ihc.Soap.AirlinkManagement.AirlinkManagementService)(this)).exitRFConfigurationAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Ihc.Soap.AirlinkManagement.outputMessageName3> Ihc.Soap.AirlinkManagement.AirlinkManagementService.testRFActuatorWithSerialNumberAsync(Ihc.Soap.AirlinkManagement.inputMessageName3 request)
        {
            return base.Channel.testRFActuatorWithSerialNumberAsync(request);
        }
        
        public System.Threading.Tasks.Task<Ihc.Soap.AirlinkManagement.outputMessageName3> testRFActuatorWithSerialNumberAsync(System.Nullable<long> testRFActuatorWithSerialNumber1)
        {
            Ihc.Soap.AirlinkManagement.inputMessageName3 inValue = new Ihc.Soap.AirlinkManagement.inputMessageName3();
            inValue.testRFActuatorWithSerialNumber1 = testRFActuatorWithSerialNumber1;
            return ((Ihc.Soap.AirlinkManagement.AirlinkManagementService)(this)).testRFActuatorWithSerialNumberAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Ihc.Soap.AirlinkManagement.outputMessageName4> Ihc.Soap.AirlinkManagement.AirlinkManagementService.getDevicesRunningOutOfBatteryAsync(Ihc.Soap.AirlinkManagement.inputMessageName4 request)
        {
            return base.Channel.getDevicesRunningOutOfBatteryAsync(request);
        }
        
        public System.Threading.Tasks.Task<Ihc.Soap.AirlinkManagement.outputMessageName4> getDevicesRunningOutOfBatteryAsync()
        {
            Ihc.Soap.AirlinkManagement.inputMessageName4 inValue = new Ihc.Soap.AirlinkManagement.inputMessageName4();
            return ((Ihc.Soap.AirlinkManagement.AirlinkManagementService)(this)).getDevicesRunningOutOfBatteryAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Ihc.Soap.AirlinkManagement.outputMessageName5> Ihc.Soap.AirlinkManagement.AirlinkManagementService.waitForDeviceDetectedAsync(Ihc.Soap.AirlinkManagement.inputMessageName5 request)
        {
            return base.Channel.waitForDeviceDetectedAsync(request);
        }
        
        public System.Threading.Tasks.Task<Ihc.Soap.AirlinkManagement.outputMessageName5> waitForDeviceDetectedAsync(System.Nullable<int> waitForDeviceDetected1)
        {
            Ihc.Soap.AirlinkManagement.inputMessageName5 inValue = new Ihc.Soap.AirlinkManagement.inputMessageName5();
            inValue.waitForDeviceDetected1 = waitForDeviceDetected1;
            return ((Ihc.Soap.AirlinkManagement.AirlinkManagementService)(this)).waitForDeviceDetectedAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Ihc.Soap.AirlinkManagement.outputMessageName6> Ihc.Soap.AirlinkManagement.AirlinkManagementService.waitForDeviceTestResultAsync(Ihc.Soap.AirlinkManagement.inputMessageName6 request)
        {
            return base.Channel.waitForDeviceTestResultAsync(request);
        }
        
        public System.Threading.Tasks.Task<Ihc.Soap.AirlinkManagement.outputMessageName6> waitForDeviceTestResultAsync(System.Nullable<int> waitForDeviceTestResult1)
        {
            Ihc.Soap.AirlinkManagement.inputMessageName6 inValue = new Ihc.Soap.AirlinkManagement.inputMessageName6();
            inValue.waitForDeviceTestResult1 = waitForDeviceTestResult1;
            return ((Ihc.Soap.AirlinkManagement.AirlinkManagementService)(this)).waitForDeviceTestResultAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Ihc.Soap.AirlinkManagement.outputMessageName7> Ihc.Soap.AirlinkManagement.AirlinkManagementService.getDetectedDeviceListAsync(Ihc.Soap.AirlinkManagement.inputMessageName7 request)
        {
            return base.Channel.getDetectedDeviceListAsync(request);
        }
        
        public System.Threading.Tasks.Task<Ihc.Soap.AirlinkManagement.outputMessageName7> getDetectedDeviceListAsync()
        {
            Ihc.Soap.AirlinkManagement.inputMessageName7 inValue = new Ihc.Soap.AirlinkManagement.inputMessageName7();
            return ((Ihc.Soap.AirlinkManagement.AirlinkManagementService)(this)).getDetectedDeviceListAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Ihc.Soap.AirlinkManagement.outputMessageName8> Ihc.Soap.AirlinkManagement.AirlinkManagementService.enterRFTestAsync(Ihc.Soap.AirlinkManagement.inputMessageName8 request)
        {
            return base.Channel.enterRFTestAsync(request);
        }
        
        public System.Threading.Tasks.Task<Ihc.Soap.AirlinkManagement.outputMessageName8> enterRFTestAsync()
        {
            Ihc.Soap.AirlinkManagement.inputMessageName8 inValue = new Ihc.Soap.AirlinkManagement.inputMessageName8();
            return ((Ihc.Soap.AirlinkManagement.AirlinkManagementService)(this)).enterRFTestAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Ihc.Soap.AirlinkManagement.outputMessageName9> Ihc.Soap.AirlinkManagement.AirlinkManagementService.exitRFTestAsync(Ihc.Soap.AirlinkManagement.inputMessageName9 request)
        {
            return base.Channel.exitRFTestAsync(request);
        }
        
        public System.Threading.Tasks.Task<Ihc.Soap.AirlinkManagement.outputMessageName9> exitRFTestAsync()
        {
            Ihc.Soap.AirlinkManagement.inputMessageName9 inValue = new Ihc.Soap.AirlinkManagement.inputMessageName9();
            return ((Ihc.Soap.AirlinkManagement.AirlinkManagementService)(this)).exitRFTestAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Ihc.Soap.AirlinkManagement.outputMessageName10> Ihc.Soap.AirlinkManagement.AirlinkManagementService.getBatteryLevelAsync(Ihc.Soap.AirlinkManagement.inputMessageName10 request)
        {
            return base.Channel.getBatteryLevelAsync(request);
        }
        
        public System.Threading.Tasks.Task<Ihc.Soap.AirlinkManagement.outputMessageName10> getBatteryLevelAsync(System.Nullable<int> getBatteryLevel1)
        {
            Ihc.Soap.AirlinkManagement.inputMessageName10 inValue = new Ihc.Soap.AirlinkManagement.inputMessageName10();
            inValue.getBatteryLevel1 = getBatteryLevel1;
            return ((Ihc.Soap.AirlinkManagement.AirlinkManagementService)(this)).getBatteryLevelAsync(inValue);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        #if !NET6_0_OR_GREATER
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        #endif
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.AirlinkManagementServiceBindingPort))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.AirlinkManagementServiceBindingPort))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost/AirlinkManagementService");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return AirlinkManagementServiceClient.GetBindingForEndpoint(EndpointConfiguration.AirlinkManagementServiceBindingPort);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return AirlinkManagementServiceClient.GetEndpointAddress(EndpointConfiguration.AirlinkManagementServiceBindingPort);
        }
        
        public enum EndpointConfiguration
        {
            
            AirlinkManagementServiceBindingPort,
        }
    }
}
