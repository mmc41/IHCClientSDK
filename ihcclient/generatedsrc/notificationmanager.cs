//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Ihc.Soap.Notificationmanager
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="utcs", ConfigurationName="Ihc.Soap.Notificationmanager.NotificationManagerService")]
    public interface NotificationManagerService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="getMessages", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<Ihc.Soap.Notificationmanager.outputMessageName1> getMessagesAsync(Ihc.Soap.Notificationmanager.inputMessageName1 request);
        
        [System.ServiceModel.OperationContractAttribute(Action="clearMessages", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<Ihc.Soap.Notificationmanager.outputMessageName2> clearMessagesAsync(Ihc.Soap.Notificationmanager.inputMessageName2 request);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="utcs")]
    public partial class WSNotificationMessage
    {
        
        private WSDate dateField;
        
        private string notificationTypeField;
        
        private string recipientField;
        
        private string senderField;
        
        private string subjectField;
        
        private string bodyField;
        
        private bool deliveredField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public WSDate date
        {
            get
            {
                return this.dateField;
            }
            set
            {
                this.dateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string notificationType
        {
            get
            {
                return this.notificationTypeField;
            }
            set
            {
                this.notificationTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string recipient
        {
            get
            {
                return this.recipientField;
            }
            set
            {
                this.recipientField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string sender
        {
            get
            {
                return this.senderField;
            }
            set
            {
                this.senderField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string subject
        {
            get
            {
                return this.subjectField;
            }
            set
            {
                this.subjectField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string body
        {
            get
            {
                return this.bodyField;
            }
            set
            {
                this.bodyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public bool delivered
        {
            get
            {
                return this.deliveredField;
            }
            set
            {
                this.deliveredField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="utcs")]
    public partial class WSDate
    {
        
        private int dayField;
        
        private int hoursField;
        
        private int minutesField;
        
        private int secondsField;
        
        private int yearField;
        
        private int monthWithJanuaryAsOneField;
        
        /// <remarks/>
        public int day
        {
            get
            {
                return this.dayField;
            }
            set
            {
                this.dayField = value;
            }
        }
        
        /// <remarks/>
        public int hours
        {
            get
            {
                return this.hoursField;
            }
            set
            {
                this.hoursField = value;
            }
        }
        
        /// <remarks/>
        public int minutes
        {
            get
            {
                return this.minutesField;
            }
            set
            {
                this.minutesField = value;
            }
        }
        
        /// <remarks/>
        public int seconds
        {
            get
            {
                return this.secondsField;
            }
            set
            {
                this.secondsField = value;
            }
        }
        
        /// <remarks/>
        public int year
        {
            get
            {
                return this.yearField;
            }
            set
            {
                this.yearField = value;
            }
        }
        
        /// <remarks/>
        public int monthWithJanuaryAsOne
        {
            get
            {
                return this.monthWithJanuaryAsOneField;
            }
            set
            {
                this.monthWithJanuaryAsOneField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class inputMessageName1
    {
        
        public inputMessageName1()
        {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class outputMessageName1
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="utcs", Order=0)]
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("arrayItem")]
        public Ihc.Soap.Notificationmanager.WSNotificationMessage[] getMessages1;
        
        public outputMessageName1()
        {
        }
        
        public outputMessageName1(Ihc.Soap.Notificationmanager.WSNotificationMessage[] getMessages1)
        {
            this.getMessages1 = getMessages1;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class inputMessageName2
    {
        
        public inputMessageName2()
        {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class outputMessageName2
    {
        
        public outputMessageName2()
        {
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    public interface NotificationManagerServiceChannel : Ihc.Soap.Notificationmanager.NotificationManagerService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    public partial class NotificationManagerServiceClient : System.ServiceModel.ClientBase<Ihc.Soap.Notificationmanager.NotificationManagerService>, Ihc.Soap.Notificationmanager.NotificationManagerService
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public NotificationManagerServiceClient() : 
                base(NotificationManagerServiceClient.GetDefaultBinding(), NotificationManagerServiceClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.NotificationManagerServiceBindingPort.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public NotificationManagerServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(NotificationManagerServiceClient.GetBindingForEndpoint(endpointConfiguration), NotificationManagerServiceClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public NotificationManagerServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(NotificationManagerServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public NotificationManagerServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(NotificationManagerServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public NotificationManagerServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Ihc.Soap.Notificationmanager.outputMessageName1> Ihc.Soap.Notificationmanager.NotificationManagerService.getMessagesAsync(Ihc.Soap.Notificationmanager.inputMessageName1 request)
        {
            return base.Channel.getMessagesAsync(request);
        }
        
        public System.Threading.Tasks.Task<Ihc.Soap.Notificationmanager.outputMessageName1> getMessagesAsync()
        {
            Ihc.Soap.Notificationmanager.inputMessageName1 inValue = new Ihc.Soap.Notificationmanager.inputMessageName1();
            return ((Ihc.Soap.Notificationmanager.NotificationManagerService)(this)).getMessagesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Ihc.Soap.Notificationmanager.outputMessageName2> Ihc.Soap.Notificationmanager.NotificationManagerService.clearMessagesAsync(Ihc.Soap.Notificationmanager.inputMessageName2 request)
        {
            return base.Channel.clearMessagesAsync(request);
        }
        
        public System.Threading.Tasks.Task<Ihc.Soap.Notificationmanager.outputMessageName2> clearMessagesAsync()
        {
            Ihc.Soap.Notificationmanager.inputMessageName2 inValue = new Ihc.Soap.Notificationmanager.inputMessageName2();
            return ((Ihc.Soap.Notificationmanager.NotificationManagerService)(this)).clearMessagesAsync(inValue);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        #if !NET6_0_OR_GREATER
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        #endif
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.NotificationManagerServiceBindingPort))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.NotificationManagerServiceBindingPort))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost/NotificationManagerService");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return NotificationManagerServiceClient.GetBindingForEndpoint(EndpointConfiguration.NotificationManagerServiceBindingPort);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return NotificationManagerServiceClient.GetEndpointAddress(EndpointConfiguration.NotificationManagerServiceBindingPort);
        }
        
        public enum EndpointConfiguration
        {
            
            NotificationManagerServiceBindingPort,
        }
    }
}
